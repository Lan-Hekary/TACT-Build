# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
    push:
        tags:
            - v* # Push events to v* tags

jobs:
    test:
        name: Deploy node ${{ matrix.node_version }} and ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        continue-on-error: true
        strategy:
            fail-fast: false
            matrix:
                node_version: ['12.x']
                #         os: [ubuntu-latest]
                os: [ubuntu-latest, windows-latest, macOS-latest]
        env:
            CSC_IDENTITY_AUTO_DISCOVERY: false
        steps:
            # - name: Setting Env & Get npm cache directory
            #     run: |
            #     echo "::set-env name=NPM_CACHE::$(npm config get cache)"
            #     echo "::set-env name=ELECTRON_CACHE::$(echo $HOME/.cache/electron)"
            #     echo "::set-env name=ELECTRON_BUILDER_CACHE::$(echo $HOME/.cache/electron-builder)"
            #     echo "::set-env name=CSC_IDENTITY_AUTO_DISCOVERY::false"
            - name: Check out Git repository
              uses: actions/checkout@v1
            - name: Install libusb
                if: runner.os == 'Linux'
                run: sudo apt-get install libusb-1.0-0-dev
            - name: Use Node.js ${{ matrix.node_version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node_version }}
            # - uses: actions/cache@v2
            #     name: Caching
            #     id: cache
            #     with:
            #     path: |
            #         ${{ env.NPM_CACHE }}
            #         ${{ env.ELECTRON_CACHE }}
            #         ${{ env.ELECTRON_BUILDER_CACHE }}
            #     key: OS-${{ runner.os }}-node-${{ matrix.node_version }}-electron-${{ hashFiles('**/**package-lock.json') }}
            #     restore-keys: |
            #         OS-${{ runner.os }}-node-${{ matrix.node_version }}-electron-
            - name: Build/release Electron app
              uses: samuelmeuli/action-electron-builder@v1
              with:
                  # GitHub token, automatically provided to the action
                  # (No need to define this secret in the repo settings)
                  github_token: ${{ secrets.github_token }}

                  # If the commit is tagged with a version (e.g. "v1.0.0"),
                  # release the app after building
                  release: ${{ startsWith(github.ref, 'refs/tags/v') }}
#     - name: Install
#       run: |
#         npm install
#     - name: Test
#       if: steps.cache.outputs.cache-hit != 'true'
#       run: |
#         npm test
#     - name: Build
#       run: |
#         npm run release
#     - name: Upload Artifact
#       uses: actions/upload-artifact@v2
#       with:
#         name: ${{ runner.os }}-build
#         path: ./out/
